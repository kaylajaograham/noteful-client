-- first remove the foreign key constraint from folders
ALTER TABLE IF EXISTS folders
  DROP COLUMN notes_num;

-- TRUNCATE all tables to ensure that there are no
-- data in them so we start with a fresh set of data
TRUNCATE folders, notes RESTART IDENTITY CASCADE;


-- DROP the tables and constraints
DROP TABLE IF EXISTS folders;
DROP TABLE IF EXISTS notes;

-- create the folders table without the foreign key
CREATE TABLE folders (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  folder_name TEXT NOT NULL
);

-- insert 4 values into folders
INSERT INTO folders
  (folder_name)
  VALUES
    ('Spain'),
    ('Japan'),
    ('France'),
    ('Canada');

-- create the notes table

CREATE TABLE notes (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  note_name TEXT NOT NULL,
  content TEXT,
  start_date DATE,
  folder_id INTEGER REFERENCES folders(id)
);

-- insert 4 notes
INSERT INTO notes
  (note_name, content, start_date, folder_id)
  VALUES
    ('Barcelona', 'We must see Gaudi!', '10/4/2019', 1),
    ('Madrid', 'Venture to San Sebastian', '06/20/2019', 1),
    ('Tokyo', 'Eat all the sushi', '4/6/2019', 2),
    ('Paris', 'Drink wine', '2/11/2019', 3), 
    ('Nice', 'French Riveria', '3/19/2019', 3), 
    ('Marseille', 'Learn french', '10/3/2019', 3), 
    ('Vancouver', 'Just like San Francisco', '2/14/2019', 4), 
    ('Banff', 'See the mountains', '7/3/2018', 4), 
    ('Toronto', 'Find Drake', '3/8/2016', 4), 
    ('Montreal', 'French side', '7/2/2009', 4);

-- now the notes_num relationship between folders and notes is possible

ALTER TABLE folders
  ADD COLUMN notes_num INTEGER REFERENCES folders(id);

-- Add note_num to the folders
UPDATE folders SET notes_num = 2 WHERE id = 1;
UPDATE folders SET notes_num = 1 WHERE id = 2;
UPDATE folders SET notes_num = 3 WHERE id = 3;
UPDATE folders SET notes_num = 4 WHERE id = 4;
